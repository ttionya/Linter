name: 'Check ESLint Rules Outdated'

on:
  repository_dispatch:
  schedule:
    - cron: '0 12 * * *'

jobs:
  check:
    name: Check Outdated

    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      -
        name: Install PNPM
        uses: pnpm/action-setup@v2.2.4
        with:
          version: latest
      -
        name: Test
        run: |
          sed -i 's#\("eslint": \)".*"#\1"latest"#' ./packages/eslint-config/package.json
          sed -i 's#\("@typescript-eslint/eslint-plugin": \)".*"#\1"latest"#' ./packages/eslint-config/package.json
          sed -i 's#\("@typescript-eslint/parser": \)".*"#\1"latest"#' ./packages/eslint-config/package.json
          sed -i 's#\("eslint-config-prettier": \)".*"#\1"latest"#' ./packages/eslint-config/package.json
          pnpm install --no-frozen-lockfile
          pnpm run --filter=@ttionya/eslint-config check
      -
        name: Get Content
        run: |
          EOF="$(dd if=/dev/urandom bs=15 count=1 status=none | base64)"
          echo "message<<${EOF}" >> $GITHUB_ENV
          pnpm run --filter=@ttionya/eslint-config check:unexpected | tail -n +5 >> $GITHUB_ENV
          echo "${EOF}" >> $GITHUB_ENV
      -
        name: Create Issue
        uses: JasonEtco/create-an-issue@v2
        if: ${{ env.message }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: ${{ env.message }}
        with:
          filename: .github/CHECK_ISSUE_TEMPLATE.md
          update_existing: true
